trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo terraform azure!
  displayName: 'Run a one-line script'
- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'azure_rsa.pub'

- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
    backendServiceArm: 'azure-resource-manager-service-connection'
    backendAzureRmResourceGroupName: 'tfstate-tfdemo-rg'
    backendAzureRmStorageAccountName: 'tfstatedemostgbk'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'kubernetes-dev.tfstate'

- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
    environmentServiceNameAzureRM: 'azure-resource-manager-service-connection'

- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
    environmentServiceNameAzureRM: 'azure-resource-manager-service-connection'